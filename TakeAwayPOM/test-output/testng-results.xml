<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" ignored="0" total="10" passed="8">
  <reporter-output>
    <line>
      <![CDATA[<a href='C:\Users\SBavihalli\git\FinreachAssignmentGit/Screenshots/TA_01_AccountCreations--tryToLoginWithoutActivatingAccount.png'> <img src='C:\Users\SBavihalli\git\FinreachAssignmentGit/Screenshots/TA_01_AccountCreations--tryToLoginWithoutActivatingAccount.png' height='100' width='100'/> </a>]]>
    </line>
    <line>
      <![CDATA[<a href='C:\Users\SBavihalli\git\FinreachAssignmentGit/Screenshots/TA_03_PlacingOrders--addMealsToCartInTwoRestaurantsAndOrderFromOne.png'> <img src='C:\Users\SBavihalli\git\FinreachAssignmentGit/Screenshots/TA_03_PlacingOrders--addMealsToCartInTwoRestaurantsAndOrderFromOne.png' height='100' width='100'/> </a>]]>
    </line>
  </reporter-output>
  <suite name="Suite" duration-ms="682157" started-at="2019-07-07T20:27:42Z" finished-at="2019-07-07T20:39:05Z">
    <groups>
    </groups>
    <test name="Validate thuisbezorgd.nl test cases" duration-ms="4" started-at="2019-07-07T20:27:42Z" finished-at="2019-07-07T20:27:42Z">
    </test> <!-- Validate thuisbezorgd.nl test cases -->
    <test name="AccountCreations Test Scripts" duration-ms="141890" started-at="2019-07-07T20:27:42Z" finished-at="2019-07-07T20:30:04Z">
      <class name="testScripts.TA_01_AccountCreations">
        <test-method status="PASS" signature="setup()[pri:0, instance:testScripts.TA_01_AccountCreations@31a5c39e]" name="setup" is-config="true" duration-ms="11" started-at="2019-07-08T01:57:42Z" finished-at="2019-07-08T01:57:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="beforeTestMethod(java.lang.reflect.Method)[pri:0, instance:testScripts.TA_01_AccountCreations@31a5c39e]" name="beforeTestMethod" is-config="true" duration-ms="7930" started-at="2019-07-08T01:57:42Z" finished-at="2019-07-08T01:57:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testScripts.TA_01_AccountCreations.createDuplicateAccount() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTestMethod -->
        <test-method status="PASS" signature="createDuplicateAccount()[pri:0, instance:testScripts.TA_01_AccountCreations@31a5c39e]" name="createDuplicateAccount" duration-ms="9140" started-at="2019-07-08T01:57:50Z" finished-at="2019-07-08T01:57:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createDuplicateAccount -->
        <test-method status="PASS" signature="takeScreenShot(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:testScripts.TA_01_AccountCreations@31a5c39e]" name="takeScreenShot" is-config="true" duration-ms="4004" started-at="2019-07-08T01:57:59Z" finished-at="2019-07-08T01:58:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=createDuplicateAccount status=SUCCESS method=TA_01_AccountCreations.createDuplicateAccount()[pri:0, instance:testScripts.TA_01_AccountCreations@31a5c39e] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testScripts.TA_01_AccountCreations.createDuplicateAccount() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenShot -->
        <test-method status="PASS" signature="beforeTestMethod(java.lang.reflect.Method)[pri:0, instance:testScripts.TA_01_AccountCreations@31a5c39e]" name="beforeTestMethod" is-config="true" duration-ms="6836" started-at="2019-07-08T01:58:03Z" finished-at="2019-07-08T01:58:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testScripts.TA_01_AccountCreations.madatoryFiledsWhileCreatingAnAccount() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTestMethod -->
        <test-method status="PASS" signature="madatoryFiledsWhileCreatingAnAccount()[pri:0, instance:testScripts.TA_01_AccountCreations@31a5c39e]" name="madatoryFiledsWhileCreatingAnAccount" duration-ms="29329" started-at="2019-07-08T01:58:10Z" finished-at="2019-07-08T01:58:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- madatoryFiledsWhileCreatingAnAccount -->
        <test-method status="PASS" signature="takeScreenShot(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:testScripts.TA_01_AccountCreations@31a5c39e]" name="takeScreenShot" is-config="true" duration-ms="4005" started-at="2019-07-08T01:58:40Z" finished-at="2019-07-08T01:58:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=madatoryFiledsWhileCreatingAnAccount status=SUCCESS method=TA_01_AccountCreations.madatoryFiledsWhileCreatingAnAccount()[pri:0, instance:testScripts.TA_01_AccountCreations@31a5c39e] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testScripts.TA_01_AccountCreations.madatoryFiledsWhileCreatingAnAccount() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenShot -->
        <test-method status="PASS" signature="beforeTestMethod(java.lang.reflect.Method)[pri:0, instance:testScripts.TA_01_AccountCreations@31a5c39e]" name="beforeTestMethod" is-config="true" duration-ms="7831" started-at="2019-07-08T01:58:44Z" finished-at="2019-07-08T01:58:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testScripts.TA_01_AccountCreations.successfulAccountCreation() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTestMethod -->
        <test-method status="PASS" signature="successfulAccountCreation()[pri:0, instance:testScripts.TA_01_AccountCreations@31a5c39e]" name="successfulAccountCreation" duration-ms="17229" started-at="2019-07-08T01:58:51Z" finished-at="2019-07-08T01:59:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- successfulAccountCreation -->
        <test-method status="PASS" signature="takeScreenShot(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:testScripts.TA_01_AccountCreations@31a5c39e]" name="takeScreenShot" is-config="true" duration-ms="4005" started-at="2019-07-08T01:59:09Z" finished-at="2019-07-08T01:59:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=successfulAccountCreation status=SUCCESS method=TA_01_AccountCreations.successfulAccountCreation()[pri:0, instance:testScripts.TA_01_AccountCreations@31a5c39e] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testScripts.TA_01_AccountCreations.successfulAccountCreation() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenShot -->
        <test-method status="PASS" signature="beforeTestMethod(java.lang.reflect.Method)[pri:0, instance:testScripts.TA_01_AccountCreations@31a5c39e]" name="beforeTestMethod" is-config="true" duration-ms="7288" started-at="2019-07-08T01:59:13Z" finished-at="2019-07-08T01:59:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testScripts.TA_01_AccountCreations.tryToLoginWithoutActivatingAccount() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTestMethod -->
        <test-method status="FAIL" signature="tryToLoginWithoutActivatingAccount()[pri:0, instance:testScripts.TA_01_AccountCreations@31a5c39e]" name="tryToLoginWithoutActivatingAccount" duration-ms="35451" started-at="2019-07-08T01:59:20Z" finished-at="2019-07-08T01:59:55Z">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Timed out after 15 seconds. Unable to locate the element]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Timed out after 15 seconds. Unable to locate the element
	at org.openqa.selenium.support.pagefactory.AjaxElementLocator.findElement(AjaxElementLocator.java:91)
	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
	at com.sun.proxy.$Proxy13.click(Unknown Source)
	at pageFactory.LoginPage.loginToApp(LoginPage.java:110)
	at testScripts.TA_01_AccountCreations.tryToLoginWithoutActivatingAccount(TA_01_AccountCreations.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id='userpanel-wrapper']/section/button"}
  (Session info: chrome=74.0.3729.131)
  (Driver info: chromedriver=74.0.3729.6 (255758eccf3d244491b8a1317aa76e1ce10d57e9-refs/branch-heads/3729@{#29}),platform=Windows NT 6.1.7601 SP1 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 37 milliseconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.4.0', revision: 'unknown', time: 'unknown'
System info: host: 'INLTP-SURESH', ip: '192.168.1.2', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_162'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{mobileEmulationEnabled=false, timeouts={implicit=0.0, pageLoad=300000.0, script=30000.0}, hasTouchScreen=false, platform=XP, acceptSslCerts=false, goog:chromeOptions={debuggerAddress=localhost:64477}, acceptInsecureCerts=false, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, setWindowRect=true, unexpectedAlertBehaviour=ignore, applicationCacheEnabled=false, rotatable=false, networkConnectionEnabled=false, chrome={chromedriverVersion=74.0.3729.6 (255758eccf3d244491b8a1317aa76e1ce10d57e9-refs/branch-heads/3729@{#29}), userDataDir=C:\Users\SBAVIH~1\AppData\Local\Temp\scoped_dir17484_2069}, takesHeapSnapshot=true, pageLoadStrategy=normal, strictFileInteractability=false, databaseEnabled=false, handlesAlerts=true, version=74.0.3729.131, browserConnectionEnabled=false, proxy=Proxy(), nativeEvents=true, locationContextEnabled=true, cssSelectorsEnabled=true}]
Session ID: 67736de629628a8e03eb9559045b6954
*** Element info: {Using=xpath, value=//*[@id='userpanel-wrapper']/section/button}
	at sun.reflect.GeneratedConstructorAccessor19.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:215)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:167)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:671)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:410)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:509)
	at org.openqa.selenium.By$ByXPath.findElement(By.java:361)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:402)
	at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
	at org.openqa.selenium.support.pagefactory.AjaxElementLocator.access$001(AjaxElementLocator.java:41)
	at org.openqa.selenium.support.pagefactory.AjaxElementLocator$SlowLoadingElement.isLoaded(AjaxElementLocator.java:157)
	at org.openqa.selenium.support.ui.SlowLoadableComponent.get(SlowLoadableComponent.java:70)
	at org.openqa.selenium.support.pagefactory.AjaxElementLocator.findElement(AjaxElementLocator.java:87)
	... 29 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tryToLoginWithoutActivatingAccount -->
        <test-method status="PASS" signature="takeScreenShot(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:testScripts.TA_01_AccountCreations@31a5c39e]" name="takeScreenShot" is-config="true" duration-ms="4785" started-at="2019-07-08T01:59:55Z" finished-at="2019-07-08T02:00:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=tryToLoginWithoutActivatingAccount status=FAILURE method=TA_01_AccountCreations.tryToLoginWithoutActivatingAccount()[pri:0, instance:testScripts.TA_01_AccountCreations@31a5c39e] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testScripts.TA_01_AccountCreations.tryToLoginWithoutActivatingAccount() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<a href='C:\Users\SBavihalli\git\FinreachAssignmentGit/Screenshots/TA_01_AccountCreations--tryToLoginWithoutActivatingAccount.png'> <img src='C:\Users\SBavihalli\git\FinreachAssignmentGit/Screenshots/TA_01_AccountCreations--tryToLoginWithoutActivatingAccount.png' height='100' width='100'/> </a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- takeScreenShot -->
        <test-method status="PASS" signature="close()[pri:0, instance:testScripts.TA_01_AccountCreations@31a5c39e]" name="close" is-config="true" duration-ms="4007" started-at="2019-07-08T02:00:00Z" finished-at="2019-07-08T02:00:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
      </class> <!-- testScripts.TA_01_AccountCreations -->
    </test> <!-- AccountCreations Test Scripts -->
    <test name="PlacingOrders Test Scripts" duration-ms="473639" started-at="2019-07-07T20:30:04Z" finished-at="2019-07-07T20:37:58Z">
      <class name="testScripts.TA_03_PlacingOrders">
        <test-method status="PASS" signature="setup()[pri:0, instance:testScripts.TA_03_PlacingOrders@6e1567f1]" name="setup" is-config="true" duration-ms="20" started-at="2019-07-08T02:00:04Z" finished-at="2019-07-08T02:00:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="beforeTestMethod(java.lang.reflect.Method)[pri:0, instance:testScripts.TA_03_PlacingOrders@6e1567f1]" name="beforeTestMethod" is-config="true" duration-ms="3660" started-at="2019-07-08T02:00:04Z" finished-at="2019-07-08T02:00:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testScripts.TA_03_PlacingOrders.addMealsToCartInTwoRestaurantsAndOrderFromOne() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTestMethod -->
        <test-method status="FAIL" signature="addMealsToCartInTwoRestaurantsAndOrderFromOne()[pri:0, instance:testScripts.TA_03_PlacingOrders@6e1567f1]" name="addMealsToCartInTwoRestaurantsAndOrderFromOne" duration-ms="96097" started-at="2019-07-08T02:00:08Z" finished-at="2019-07-08T02:01:44Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at pageFactory.Meals.validateCart(Meals.java:106)
	at testScripts.TA_03_PlacingOrders.addMealsToCartInTwoRestaurantsAndOrderFromOne(TA_03_PlacingOrders.java:372)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addMealsToCartInTwoRestaurantsAndOrderFromOne -->
        <test-method status="PASS" signature="takeScreenShot(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:testScripts.TA_03_PlacingOrders@6e1567f1]" name="takeScreenShot" is-config="true" duration-ms="5980" started-at="2019-07-08T02:01:44Z" finished-at="2019-07-08T02:01:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addMealsToCartInTwoRestaurantsAndOrderFromOne status=FAILURE method=TA_03_PlacingOrders.addMealsToCartInTwoRestaurantsAndOrderFromOne()[pri:0, instance:testScripts.TA_03_PlacingOrders@6e1567f1] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testScripts.TA_03_PlacingOrders.addMealsToCartInTwoRestaurantsAndOrderFromOne() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<a href='C:\Users\SBavihalli\git\FinreachAssignmentGit/Screenshots/TA_03_PlacingOrders--addMealsToCartInTwoRestaurantsAndOrderFromOne.png'> <img src='C:\Users\SBavihalli\git\FinreachAssignmentGit/Screenshots/TA_03_PlacingOrders--addMealsToCartInTwoRestaurantsAndOrderFromOne.png' height='100' width='100'/> </a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- takeScreenShot -->
        <test-method status="PASS" signature="beforeTestMethod(java.lang.reflect.Method)[pri:0, instance:testScripts.TA_03_PlacingOrders@6e1567f1]" name="beforeTestMethod" is-config="true" duration-ms="3988" started-at="2019-07-08T02:01:50Z" finished-at="2019-07-08T02:01:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testScripts.TA_03_PlacingOrders.addingItemsToCartInTwoRestaurants() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTestMethod -->
        <test-method status="PASS" signature="addingItemsToCartInTwoRestaurants()[pri:0, instance:testScripts.TA_03_PlacingOrders@6e1567f1]" name="addingItemsToCartInTwoRestaurants" duration-ms="46420" started-at="2019-07-08T02:01:54Z" finished-at="2019-07-08T02:02:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addingItemsToCartInTwoRestaurants -->
        <test-method status="PASS" signature="takeScreenShot(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:testScripts.TA_03_PlacingOrders@6e1567f1]" name="takeScreenShot" is-config="true" duration-ms="4906" started-at="2019-07-08T02:02:41Z" finished-at="2019-07-08T02:02:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addingItemsToCartInTwoRestaurants status=SUCCESS method=TA_03_PlacingOrders.addingItemsToCartInTwoRestaurants()[pri:0, instance:testScripts.TA_03_PlacingOrders@6e1567f1] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testScripts.TA_03_PlacingOrders.addingItemsToCartInTwoRestaurants() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenShot -->
        <test-method status="PASS" signature="beforeTestMethod(java.lang.reflect.Method)[pri:0, instance:testScripts.TA_03_PlacingOrders@6e1567f1]" name="beforeTestMethod" is-config="true" duration-ms="5429" started-at="2019-07-08T02:02:45Z" finished-at="2019-07-08T02:02:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testScripts.TA_03_PlacingOrders.modeOfPayments_TransactionCharges() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTestMethod -->
        <test-method status="PASS" signature="modeOfPayments_TransactionCharges()[pri:0, instance:testScripts.TA_03_PlacingOrders@6e1567f1]" name="modeOfPayments_TransactionCharges" duration-ms="52349" started-at="2019-07-08T02:02:51Z" finished-at="2019-07-08T02:03:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modeOfPayments_TransactionCharges -->
        <test-method status="PASS" signature="takeScreenShot(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:testScripts.TA_03_PlacingOrders@6e1567f1]" name="takeScreenShot" is-config="true" duration-ms="4954" started-at="2019-07-08T02:03:43Z" finished-at="2019-07-08T02:03:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=modeOfPayments_TransactionCharges status=SUCCESS method=TA_03_PlacingOrders.modeOfPayments_TransactionCharges()[pri:0, instance:testScripts.TA_03_PlacingOrders@6e1567f1] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testScripts.TA_03_PlacingOrders.modeOfPayments_TransactionCharges() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenShot -->
        <test-method status="PASS" signature="beforeTestMethod(java.lang.reflect.Method)[pri:0, instance:testScripts.TA_03_PlacingOrders@6e1567f1]" name="beforeTestMethod" is-config="true" duration-ms="6737" started-at="2019-07-08T02:03:48Z" finished-at="2019-07-08T02:03:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testScripts.TA_03_PlacingOrders.orderTroughUserAccountUsingContantPaymentMode() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTestMethod -->
        <test-method status="PASS" signature="orderTroughUserAccountUsingContantPaymentMode()[pri:0, instance:testScripts.TA_03_PlacingOrders@6e1567f1]" name="orderTroughUserAccountUsingContantPaymentMode" duration-ms="177913" started-at="2019-07-08T02:03:55Z" finished-at="2019-07-08T02:06:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- orderTroughUserAccountUsingContantPaymentMode -->
        <test-method status="PASS" signature="takeScreenShot(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:testScripts.TA_03_PlacingOrders@6e1567f1]" name="takeScreenShot" is-config="true" duration-ms="4997" started-at="2019-07-08T02:06:53Z" finished-at="2019-07-08T02:06:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=orderTroughUserAccountUsingContantPaymentMode status=SUCCESS method=TA_03_PlacingOrders.orderTroughUserAccountUsingContantPaymentMode()[pri:0, instance:testScripts.TA_03_PlacingOrders@6e1567f1] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testScripts.TA_03_PlacingOrders.orderTroughUserAccountUsingContantPaymentMode() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenShot -->
        <test-method status="PASS" signature="beforeTestMethod(java.lang.reflect.Method)[pri:0, instance:testScripts.TA_03_PlacingOrders@6e1567f1]" name="beforeTestMethod" is-config="true" duration-ms="4383" started-at="2019-07-08T02:06:58Z" finished-at="2019-07-08T02:07:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testScripts.TA_03_PlacingOrders.placeOrderWithoutAnAccount() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTestMethod -->
        <test-method status="PASS" signature="placeOrderWithoutAnAccount()[pri:0, instance:testScripts.TA_03_PlacingOrders@6e1567f1]" name="placeOrderWithoutAnAccount" duration-ms="46652" started-at="2019-07-08T02:07:02Z" finished-at="2019-07-08T02:07:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- placeOrderWithoutAnAccount -->
        <test-method status="PASS" signature="takeScreenShot(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:testScripts.TA_03_PlacingOrders@6e1567f1]" name="takeScreenShot" is-config="true" duration-ms="5138" started-at="2019-07-08T02:07:49Z" finished-at="2019-07-08T02:07:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=placeOrderWithoutAnAccount status=SUCCESS method=TA_03_PlacingOrders.placeOrderWithoutAnAccount()[pri:0, instance:testScripts.TA_03_PlacingOrders@6e1567f1] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testScripts.TA_03_PlacingOrders.placeOrderWithoutAnAccount() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenShot -->
        <test-method status="PASS" signature="close()[pri:0, instance:testScripts.TA_03_PlacingOrders@6e1567f1]" name="close" is-config="true" duration-ms="4006" started-at="2019-07-08T02:07:54Z" finished-at="2019-07-08T02:07:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
      </class> <!-- testScripts.TA_03_PlacingOrders -->
    </test> <!-- PlacingOrders Test Scripts -->
    <test name="Cart Test Scripts" duration-ms="66457" started-at="2019-07-07T20:37:58Z" finished-at="2019-07-07T20:39:05Z">
      <class name="testScripts.TA_02_CartValidation">
        <test-method status="PASS" signature="setup()[pri:0, instance:testScripts.TA_02_CartValidation@25bbe1b6]" name="setup" is-config="true" duration-ms="8674" started-at="2019-07-08T02:07:58Z" finished-at="2019-07-08T02:08:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="buttonsOnCart()[pri:0, instance:testScripts.TA_02_CartValidation@25bbe1b6]" name="buttonsOnCart" duration-ms="49770" started-at="2019-07-08T02:08:07Z" finished-at="2019-07-08T02:08:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- buttonsOnCart -->
        <test-method status="PASS" signature="beforeTestMethod(java.lang.reflect.Method)[pri:0, instance:testScripts.TA_02_CartValidation@25bbe1b6]" name="beforeTestMethod" is-config="true" duration-ms="0" started-at="2019-07-08T02:08:07Z" finished-at="2019-07-08T02:08:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testScripts.TA_02_CartValidation.buttonsOnCart() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTestMethod -->
        <test-method status="PASS" signature="takeScreenShot(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:testScripts.TA_02_CartValidation@25bbe1b6]" name="takeScreenShot" is-config="true" duration-ms="4002" started-at="2019-07-08T02:08:56Z" finished-at="2019-07-08T02:09:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=buttonsOnCart status=SUCCESS method=TA_02_CartValidation.buttonsOnCart()[pri:0, instance:testScripts.TA_02_CartValidation@25bbe1b6] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testScripts.TA_02_CartValidation.buttonsOnCart() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenShot -->
        <test-method status="PASS" signature="close()[pri:0, instance:testScripts.TA_02_CartValidation@25bbe1b6]" name="close" is-config="true" duration-ms="4007" started-at="2019-07-08T02:09:00Z" finished-at="2019-07-08T02:09:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
      </class> <!-- testScripts.TA_02_CartValidation -->
      <class name="testScripts.Input">
        <test-method status="PASS" signature="loadEnvConfig()[pri:0, instance:testScripts.Input@5622fdf]" name="loadEnvConfig" is-config="true" duration-ms="352" started-at="2019-07-08T01:57:42Z" finished-at="2019-07-08T01:57:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loadEnvConfig -->
      </class> <!-- testScripts.Input -->
    </test> <!-- Cart Test Scripts -->
  </suite> <!-- Suite -->
</testng-results>
